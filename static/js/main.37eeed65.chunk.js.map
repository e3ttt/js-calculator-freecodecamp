{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","display","setDisplay","useEffect","document","querySelectorAll","forEach","button","className","addEventListener","event","state","number","target","dataset","value","replace","id","getElementById","substring","length","data-value","onClick","fix","evaluate","toString","e","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"gQAsHeA,MAlHf,WAAgB,IAAD,EACiBC,mBAAS,KAD1B,mBACNC,EADM,KACGC,EADH,KAsDb,OAlDAC,qBAAU,WACEC,SAASC,iBAAiB,mCAE5BC,SAAQ,SAAAC,GAEW,WAArBA,EAAOC,WACTD,EAAOE,iBAAiB,SAAS,SAAAC,GAC/BR,GAAW,SAAAS,GACT,IAAIC,EAASD,EAAQD,EAAMG,OAAOC,QAAQC,MAE1C,OADAH,EAASA,EAAOI,QAAQ,MAAO,IAAIA,QAAQ,gBAAiB,MACnC,UAMb,UAAdT,EAAOU,IACTV,EAAOE,iBAAiB,SAAS,WAC/BP,EAAW,QAKU,cAArBK,EAAOC,WACTD,EAAOE,iBAAiB,SAAS,SAAAC,GAC/BR,GAAW,SAAAS,GAET,OADgBA,EAAQD,EAAMG,OAAOC,QAAQC,OAC9BC,QAAQ,wBAAyB,eAO5CZ,SAASc,eAAe,OAChCT,iBAAiB,SAAS,WAC5BP,GAAW,SAAAS,GAAK,OAAIA,EAAMQ,UAAU,EAAGR,EAAMS,OAAS,WAEvD,IAaD,sBAAKZ,UAAU,MAAf,UACE,uDACA,sBAAKA,UAAU,aAAf,UACE,qBAAKS,GAAG,UAAR,SAAsC,IAAnBhB,EAAQmB,OAAe,IAAMnB,IAChD,qBAAKgB,GAAG,QAAR,gBACA,qBAAKT,UAAU,SAASS,GAAG,MAAMI,aAAW,IAA5C,eAGA,qBAAKb,UAAU,SAASS,GAAG,MAAMI,aAAW,IAA5C,eAGA,qBAAKb,UAAU,SAASS,GAAG,QAAQI,aAAW,IAA9C,eAGA,qBAAKb,UAAU,SAASS,GAAG,OAAOI,aAAW,IAA7C,eAGA,qBAAKb,UAAU,SAASS,GAAG,OAAOI,aAAW,IAA7C,eAGA,qBAAKb,UAAU,SAASS,GAAG,MAAMI,aAAW,IAA5C,eAGA,qBAAKb,UAAU,SAASS,GAAG,QAAQI,aAAW,IAA9C,eAGA,qBAAKb,UAAU,SAASS,GAAG,QAAQI,aAAW,IAA9C,eAGA,qBAAKb,UAAU,SAASS,GAAG,OAAOI,aAAW,IAA7C,eAGA,qBAAKb,UAAU,SAASS,GAAG,UAAUI,aAAW,IAAhD,eAGA,qBAAKb,UAAU,SAASS,GAAG,OAAOI,aAAW,IAA7C,eAGA,qBAAKJ,GAAG,SAASK,QAjDC,WACtBpB,GAAW,SAAAS,GACT,IACE,OAAOY,aAAIC,YAASb,EAAMK,QAAQ,IAAK,MAAO,IAAIS,WAClD,MAAOC,GACP,MAAO,SA4CP,eAGA,qBAAKlB,UAAU,YAAYS,GAAG,MAAMI,aAAW,IAA/C,eAGA,qBAAKb,UAAU,YAAYS,GAAG,WAAWI,aAAW,IAApD,eAGA,qBAAKb,UAAU,YAAYS,GAAG,WAAWI,aAAW,IAApD,eAGA,qBAAKb,UAAU,YAAYS,GAAG,SAASI,aAAW,IAAlD,eAGA,qBAAKJ,GAAG,MAAR,wBCpGOU,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFlC,SAASc,eAAe,SAM1BS,M","file":"static/js/main.37eeed65.chunk.js","sourcesContent":["import { useEffect, useState } from 'react';\nimport { evaluate, fix } from 'mathjs';\nimport './App.css';\n\nfunction App() {\n  const [display, setDisplay] = useState('0');\n\n  let buttons = [];\n  useEffect(() => {\n    buttons = document.querySelectorAll('.calculator > div:not(#display)');\n\n    buttons.forEach(button => {\n      // Numbers\n      if (button.className === 'number') {\n        button.addEventListener('click', event => {\n          setDisplay(state => {\n            let number = state + event.target.dataset.value;\n            number = number.replace(/^0+/, '').replace(/(?<=\\.\\d*?)\\./, '');\n            return number ? number : '0';\n          });\n        });\n      }\n\n      // Clear\n      if (button.id === 'clear') {\n        button.addEventListener('click', () => {\n          setDisplay('0');\n        });\n      }\n\n      //operations\n      if (button.className === 'operation') {\n        button.addEventListener('click', event => {\n          setDisplay(state => {\n            const formula = state + event.target.dataset.value;\n            return formula.replace(/[\\+\\-x\\/]+?([\\+x\\/])/g, '$1');\n          });\n        });\n      }\n    });\n\n    // Del\n    const del = document.getElementById('del');\n    del.addEventListener('click', () => {\n      setDisplay(state => state.substring(0, state.length - 1));\n    });\n  }, []);\n\n  const evaluateDisplay = () => {\n    setDisplay(state => {\n      try {\n        return fix(evaluate(state.replace('x', '*')), 10).toString();\n      } catch (e) {\n        return '0';\n      }\n    });\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>JavaScript Calculator</h1>\n      <div className=\"calculator\">\n        <div id=\"display\">{display.length === 0 ? '0' : display}</div>\n        <div id=\"clear\">AC</div>\n        <div className=\"number\" id=\"one\" data-value=\"1\">\n          1\n        </div>\n        <div className=\"number\" id=\"two\" data-value=\"2\">\n          2\n        </div>\n        <div className=\"number\" id=\"three\" data-value=\"3\">\n          3\n        </div>\n        <div className=\"number\" id=\"four\" data-value=\"4\">\n          4\n        </div>\n        <div className=\"number\" id=\"five\" data-value=\"5\">\n          5\n        </div>\n        <div className=\"number\" id=\"six\" data-value=\"6\">\n          6\n        </div>\n        <div className=\"number\" id=\"seven\" data-value=\"7\">\n          7\n        </div>\n        <div className=\"number\" id=\"eight\" data-value=\"8\">\n          8\n        </div>\n        <div className=\"number\" id=\"nine\" data-value=\"9\">\n          9\n        </div>\n        <div className=\"number\" id=\"decimal\" data-value=\".\">\n          .\n        </div>\n        <div className=\"number\" id=\"zero\" data-value=\"0\">\n          0\n        </div>\n        <div id=\"equals\" onClick={evaluateDisplay}>\n          =\n        </div>\n        <div className=\"operation\" id=\"add\" data-value=\"+\">\n          +\n        </div>\n        <div className=\"operation\" id=\"subtract\" data-value=\"-\">\n          -\n        </div>\n        <div className=\"operation\" id=\"multiply\" data-value=\"x\">\n          x\n        </div>\n        <div className=\"operation\" id=\"divide\" data-value=\"/\">\n          /\n        </div>\n        <div id=\"del\">DEL</div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}